from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
import logging
from db import Db
import config

# –∑–∞–¥–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

token = config.BOT_TOKEN

bot = Bot(token)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)



class Form(StatesGroup):
    addMovie = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞
    removeMovie = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞
    editMovie = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
    editTThisMovie = State() # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞

# —Å—Ç–∞—Ä—Ç
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    markup_inline = types.InlineKeyboardMarkup(row_width=1)
    inlineBtn1 = types.InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª', url=config.BOT_SUBSCRIPTION_LINK)
    inlineBtn2 = types.InlineKeyboardButton('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='subscription_check')
    markup_inline.add(inlineBtn1, inlineBtn2)
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –∫–æ–¥ —Ñ–∏–ª—å–º–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞\n–î–ª—è –Ω–∞—á–∞–ª–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª:', reply_markup=markup_inline)

    # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ = id –∞–¥–º–∏–Ω–∞ - —Ç–æ –¥–∞—ë–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–∏–ª—å–º—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if str(message.from_id) == config.BOT_ADMIN_ID:
        markup_reply = types.ReplyKeyboardMarkup(row_width=2)
        markup_reply.add(types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º üìù'), types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º üóë'), types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–ª—å–º ‚úèÔ∏è'), types.KeyboardButton('–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ üìã'))
        await message.answer('–í—ã –∞–¥–º–∏–Ω —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞.\n–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/—Ñ–∏–ª—å–º—ã, –∏ —Ç–∞–∫ –∂–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤', reply_markup=markup_reply)


@dp.callback_query_handler()
async def callback(call):
    # –∫–Ω–æ–ø–∫–∏
    btnData = call.message.reply_markup['inline_keyboard'][1][0]['callback_data']
    if btnData == 'subscription_check':
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
        try:
            subscriptionStatus = await bot.get_chat_member(chat_id=config.BOT_SUBSCRIPTION, user_id=call.message.chat.id)
        except Exception:
            subscriptionStatus = 'left'

        subscriptionStatus = subscriptionStatus.status if 'status' in subscriptionStatus else subscriptionStatus

        if subscriptionStatus == 'member':
            await call.message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–≤–æ–π —Ñ–∏–ª—å–º')
        else:
            await call.message.answer('–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(lambda message: message.text == '–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ üìã')
async def listOfMovies(message: types.Message):
    # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ != id –∞–¥–º–∏–Ω–∞ - —Ç–æ –ª–∏—à–∞–µ–º –ø—Ä–∞–≤ –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    if str(message.from_id) != config.BOT_ADMIN_ID:
        await message.reply('–î–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥')
        return None

    # –±–¥ - —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
    db = Db()
    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
    data = db.listOfMovies()
    data = data if data != '' else '–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ—Ç —Ñ–∏–ª—å–º–æ–≤'
    await message.reply(data)
    # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    db.close()

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(lambda message: message.text == '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º üìù')
async def addMovie(message: types.Message):
    # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ != id –∞–¥–º–∏–Ω–∞ - —Ç–æ –ª–∏—à–∞–µ–º –ø—Ä–∞–≤ –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    if str(message.from_id) != config.BOT_ADMIN_ID:
        await message.reply('–î–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥')
        return None
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏ –∫–æ–¥. –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ || –∫–æ–¥")
    await Form.addMovie.set()


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Form.addMovie)
async def addMovie(message: types.Message, state: FSMContext):
    data = message.text.split(' || ')
    if len(data) <= 1:
        await message.reply('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ || –∫–æ–¥')
    else:
        if len(data[0]) > 255:  # –Ω–∞–∑–≤–∞–Ω–∏–µ
            await message.reply('–û—à–∏–±–∫–∞: –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 255 —Å–∏–º–≤–æ–ª–æ–≤')
        if len(data[1]) > 20:  # –∫–æ–¥
            await message.reply('–û—à–∏–±–∫–∞: –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤')
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥
        db = Db()
        data = db.addMovie(data[0], data[1])
        await message.reply(data)
        db.close()
    # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    await state.finish()

# —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(lambda message: message.text == '–£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º üóë')
async def removeMovie(message: types.Message):
    # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ != id –∞–¥–º–∏–Ω–∞ - —Ç–æ –ª–∏—à–∞–µ–º –ø—Ä–∞–≤ –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    if str(message.from_id) != config.BOT_ADMIN_ID:
        await message.reply('–î–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥')
        return None
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞, —á—Ç–æ–± —É–¥–∞–ª–∏—Ç—å –µ–≥–æ")
    await Form.removeMovie.set()

# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Form.removeMovie)
async def removeMovie(message: types.Message, state: FSMContext):
    # —É–¥–∞–ª–µ–Ω–∏–µ –≤ –±–¥
    db = Db()
    data = db.removeMovie(message.text)
    await message.reply(data)
    db.close()
    # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    await state.finish()

# –ø—Ä–æ—Å–∏–º —É —é–∑–µ—Ä–∞ —á—Ç–æ–± –æ–Ω –≤–≤–µ–ª –∫–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞
@dp.message_handler(lambda message: message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–ª—å–º ‚úèÔ∏è')
async def editMovie(message: types.Message):
    # –µ—Å–ª–∏ id —é–∑–µ—Ä–∞ != id –∞–¥–º–∏–Ω–∞ - —Ç–æ –ª–∏—à–∞–µ–º –ø—Ä–∞–≤ –Ω–∞ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    if str(message.from_id) != config.BOT_ADMIN_ID:
        await message.reply('–î–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–¥')
        return None
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞, —á—Ç–æ–± —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ")
    await Form.editMovie.set()

# –ø–æ–∏—Å–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Form.editMovie)
async def editMovie(message: types.Message, state: FSMContext):
    # –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –≤ –±–¥
    db = Db()
    data = db.searchMovies(message.text)
    if len(data) >= 1:
        await message.reply(f'–§–∏–ª—å–º –Ω–∞–π–¥–µ–Ω.\nid: {data[0][0]}, –Ω–∞–∑–≤–∞–Ω–∏–µ: {data[0][1]}, –∫–æ–¥: {data[0][2]}\n–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ || –∫–æ–¥')
        await state.update_data(code=message.text)
        await Form.editTThisMovie.set()
    else:
        await message.reply(f'–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –∫–æ–¥—É: {message.text}')
        # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        await state.finish()

    db.close()

# —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
@dp.message_handler(state=Form.editTThisMovie)
async def editTThisMovie(message: types.Message, state: FSMContext):
    code = await state.get_data()
    data = message.text.split(' || ')
    # –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if len(data) <= 1:
        await message.reply('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: –Ω–∞–∑–≤–∞–Ω–∏–µ || –∫–æ–¥')
    if len(data[0]) > 255: #–Ω–∞–∑–≤–∞–Ω–∏–µ
        await message.reply('–û—à–∏–±–∫–∞: –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 255 —Å–∏–º–≤–æ–ª–æ–≤')
    if len(data[1]) > 20: #–∫–æ–¥
        await message.reply('–û—à–∏–±–∫–∞: –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω—å—à–µ 20 —Å–∏–º–≤–æ–ª–æ–≤')
    db = Db()
    dataEdit = db.editMovice(data[0], data[1], code['code'])
    await message.reply(dataEdit)
    db.close()
    # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    await state.finish()

#—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —é–∑–µ—Ä–∞ (–∫–æ–¥ —Ñ–∏–ª—å–º–∞)
@dp.message_handler(content_types=['text'])
async def code(message: types.Message):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
        subscriptionStatus = await bot.get_chat_member(chat_id=config.BOT_SUBSCRIPTION, user_id=message.from_user.id)
    except Exception:
        subscriptionStatus = 'left'

    subscriptionStatus = subscriptionStatus.status if 'status' in subscriptionStatus else subscriptionStatus

    if subscriptionStatus == 'member':
        # –±–¥ - —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
        db = Db()
        # –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É
        data = db.searchMovies(message.text)
        data = f'–§–∏–ª—å–º –ø–æ –∫–æ–¥—É: {message.text}\n---------------\n' + data[0][1] if len(data) >= 1 else '–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω'
        await message.answer(data)
        # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        db.close()
    else:
        await message.answer('–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')


#–∑–∞–ø—É—Å–∫
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)



